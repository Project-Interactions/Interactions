# Configuration file

botania {
    B:Botaniatop=true
    B:showBotaniaprogress=true
    B:testinprogress=true
    B:textinprogress=true
}


##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# Client-side settings
##########################################################################################################

client {
    # Color of the border of the box (0 to disable) [default: 0]
    S:boxBorderColor=0

    # The distance to the bottom side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: -1]
    I:boxBottomY=-1

    # Color of the box (0 to disable) [default: 0]
    S:boxFillColor=0

    # The distance to the left side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: -1]
    I:boxLeftX=-1

    # How much the border should be offset (i.e. to create an 'outer' border) [range: 0 ~ 20, default: 0]
    I:boxOffset=0

    # The distance to the right side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: -1]
    I:boxRightX=-1

    # Thickness of the border of the box (0 to disable) [range: 0 ~ 20, default: 0]
    I:boxThickness=0

    # The distance to the top side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: 5]
    I:boxTopY=5

    # Color of the border of the chest contents box (0 to disable) [default: ff006699]
    S:chestContentsBorderColor=ff006699

    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true
    B:debugMode=false

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: true]
    B:extendedInMain=true

    # true means shows harvestability with vanilla style icons [default: true]
    B:harvestStyleVanilla=true

    # If true then the probe hotkey must be held down to show the tooltip [default: false]
    B:holdKeyToMakeVisible=false

    # Toggle default probe visibility (client can override) [default: true]
    B:isVisible=true

    # 0 means don't show break progress, 1 is show as bar, 2 is show as text [range: 0 ~ 2, default: 1]
    I:showBreakProgress=1

    # true means shows Custom harvestLevel (you can chance name in the lang) [default: false]
    B:showCustomharvestLevelName=false

    # true means shows entity armor value [default: true]
    B:showEntityArmor=true

    # true means shows entity health [default: true]
    B:showEntityHealth=true

    # true means shows entity info [default: true]
    B:showEntityInfo=true

    # true means shows entity model [default: true]
    B:showEntityModel=true

    # If true show liquid information when the probe hits liquid first [default: false]
    B:showLiquids=false

    # true means shows villager career [default: true]
    B:showVillagerCareer=true

    # true means shows villager career level [default: true]
    B:showVillagerCareerLevel=true

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: red,bold]
    S:textStyleError=red,bold

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleInfo=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue]
    S:textStyleInfoImportant=blue

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray]
    S:textStyleLabel=gray

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue,italic]
    S:textStyleModName=blue,italic

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleName=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray,strikethrough]
    S:textStyleObsolete=gray,strikethrough

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: green]
    S:textStyleOk=green

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleProgress=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: yellow]
    S:textStyleWarning=yellow

    # The scale of the tooltips, 1 is default, 2 is smaller [range: 0.4 ~ 5.0, default: 1.0]
    S:tooltipScale=1.0
}


##########################################################################################################
# providers
#--------------------------------------------------------------------------------------------------------#
# Provider configuration
##########################################################################################################

providers {
    # Entity providers that should be excluded [default: ]
    S:excludedEntityProviders <
     >

    # Providers that should be excluded [default: ]
    S:excludedProviders <
     >

    # Order in which entity providers should be used [default: [theoneprobe:entity.default], [theoneprobe:entity.debug], [theoneprobe:entity.entity], [botania.spark], [botaniverse.spark], [pneumaticcraft:entity], [topalldependents:base], [topalldependents:architecturecraft], [topalldependents:binnie's mods], [topalldependents:bloodmagic], [topalldependents:chisel], [topalldependents:extrautils2], [topalldependents:forestry], [topalldependents:mysticalagriculture], [topalldependents:opencomputers], [topalldependents:storagedrawers], [topalldependents:thermaldynamics], [topalldependents:thermalexpansion], [topalldependents:tconstruct], [topalldependents:unlimitedchiselworks], [topalldependents:vanilla]]
    S:sortedEntityProviders <
        theoneprobe:entity.default
        theoneprobe:entity.debug
        theoneprobe:entity.entity
        pneumaticcraft:entity
     >

    # Order in which providers should be used [default: [theoneprobe:default], [theoneprobe:debug], [theoneprobe:block], [topce.crt], [modularmachinery:dynamic_machine_info_provider], [personalworlds], [botania.pool], [botania.Spreader], [botania.TerraPlate], [botania.RuneAltar], [botaniverse.pool], [botanic_additions.DreamingManapool], [botanic_additions.ElvenAltar], [ember.power], [ember.auto.hammer], [ember.beam.cannon], [ember.cinder.plinth], [ember.furnace], [ember.mixer], [ember.stamper], [crystal.cell], [ember.emitter], [ember.receiver], [ember.activator], [ember.beam.splitter], [ember.alchemy.pedestal], [ember.injector], [ember.reactor], [ember.pulser], [ember.funnel], [ember.com.wdcftgg.topalldependents.mods.ember_top.ember_boiler@3657b92c], [theoneprobe:thaum_highlight], [thaumcraft.smelter], [mysticalmechanics], [thermalexpansion.topplugin], [enderio:default], [tconstruct:casting], [tconstruct:progress], [immersiveengineering:EnergyInfo], [immersiveengineering:ProcessInfo], [immersiveengineering:TeslaCoilInfo], [immersiveengineering:SideConfigInfo], [immersiveengineering:FluidInfo], [appliedenergistics2:TileInfoProvider], [appliedenergistics2:PartInfoProvider], [betterfurnacesreforged:default], [compactmachines3:default], [dimensionaledibles:cake], [integrateddynamics:partData], [integrateddynamics:proxyData], [integrateddynamics:dryingBasinData], [integrateddynamics:squeezerData], [mcjtylib:default], [lightningcraft:LE Energy Info], [immersivetech:MechanicalEnergyInfo], [immersivetech:MiscInfo], [pneumaticcraft:default], [thaumicenergistics:TileTOPDataProvider], [topalldependents:base], [topalldependents:architecturecraft], [topalldependents:binnie's mods], [topalldependents:bloodmagic], [topalldependents:chisel], [topalldependents:extrautils2], [topalldependents:forestry], [topalldependents:mysticalagriculture], [topalldependents:opencomputers], [topalldependents:storagedrawers], [topalldependents:thermaldynamics], [topalldependents:thermalexpansion], [topalldependents:tconstruct], [topalldependents:unlimitedchiselworks], [topalldependents:vanilla], [wirelessutils], [researchtable], [tombstone:top], [modularrouters:default], [arcanearchives:top_integration], [hammercore], [mekanism], [cookingforblockheads], [fluxnetworks], [globalxp:default], [supersoundmuffler:default], [waystones]]
    S:sortedProviders <
        theoneprobe:default
        theoneprobe:debug
        theoneprobe:block
        random.botania.pool
        random.botania.Spreader
        random.botania.TerraPlate
        random.botania.RuneAltar
        random.botanic_additions.DreamingManapool
        random.botanic_additions.ElvenAltar
        random.ember.power
        random.ember.auto.hammer
        random.ember.beam.cannon
        random.ember.cinder.plinth
        random.ember.furnace
        random.ember.mixer
        random.ember.stamper
        random.crystal.cell
        random.ember.emitter
        random.ember.receiver
        random.ember.activator
        random.ember.beam.splitter
        random.ember.alchemy.pedestal
        random.ember.injector
        random.ember.reactor
        random.ember.pulser
        random.ember.funnel
        random.ember.mcjty.theoneprobe.mods.ember_top.ember_boiler@551630a4
        modularmachinery:dynamic_machine_info_provider
        multiblocked:recipe_progress_provider
        mysticalmechanics
        thermalexpansion.topplugin
        enderio:default
        tconstruct:casting
        tconstruct:progress
        immersiveengineering:EnergyInfo
        immersiveengineering:ProcessInfo
        immersiveengineering:TeslaCoilInfo
        immersiveengineering:SideConfigInfo
        immersiveengineering:FluidInfo
        appliedenergistics2:TileInfoProvider
        appliedenergistics2:PartInfoProvider
        betterfurnacesreforged:default
        compactmachines3:default
        dimensionaledibles:cake
        integrateddynamics:partData
        integrateddynamics:proxyData
        integrateddynamics:dryingBasinData
        integrateddynamics:squeezerData
        mcjtylib:default
        lightningcraft:LE Energy Info
        immersivetech:MechanicalEnergyInfo
        immersivetech:MiscInfo
        pneumaticcraft:default
        thaumicenergistics:TileTOPDataProvider
        wirelessutils
        researchtable
        tombstone:top
        mekanism
        arcanearchives:top_integration
        hammercore
        cookingforblockheads
        fluxnetworks
        globalxp:default
        supersoundmuffler:default
        waystones
     >
}


thaumcraft {
    B:textinprogress=false
}


##########################################################################################################
# theoneprobe
#--------------------------------------------------------------------------------------------------------#
# The One Probe configuration
##########################################################################################################

theoneprobe {
    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true

    # A list of blocks for which we don't send NBT over the network. This is mostly useful for blocks that have HUGE NBT in their pickblock (itemstack) [default: ]
    S:dontSendNBT <
     >

    # A list of blocks for which we don't show chest contents automatically except if sneaking [default: ]
    S:dontShowContentsUnlessSneaking <
     >

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: false]
    B:extendedInMain=true

    # How much time (ms) to wait before reporting an exception again [range: 1 ~ 10000000, default: 20000]
    I:loggingThrowableTimeout=20000

    # The maximum packet size to send an itemstack from client to server. Reduce this if you have issues with network lag caused by TOP [range: -1 ~ 32768, default: 20000]
    I:maxPacketToServer=20000

    # Is the probe needed to show the tooltip? 0 = no, 1 = yes, 2 = yes and clients cannot override, 3 = probe needed for extended info only [range: 0 ~ 3, default: 3]
    I:needsProbe=0

    # Distance at which the probe works [range: 0.1 ~ 200.0, default: 6.0]
    S:probeDistance=6.0

    # Format for displaying RF: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:rfFormat=1

    # Alternate color for the RF bar [default: ff430000]
    S:rfbarAlternateFilledColor=ff430000

    # Color for the RF bar border [default: ff555555]
    S:rfbarBorderColor=ff555555

    # Color for the RF bar [default: ffdd0000]
    S:rfbarFilledColor=ffdd0000

    # Show animal owner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showAnimalOwnerSetting=2

    # Show brewing stand setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showBrewStandSetting=1

    # Show if the block can be harvested (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showCanBeHarvested=1

    # Show chest contents (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showChestContents=2

    # Show chest contents in detail (0 = not, 1 = always, 2 = sneak), used only if number of items is below 'showItemDetailThresshold' [range: 0 ~ 2, default: 2]
    I:showChestContentsDetailed=2

    # If true show the color of the collar of a wolf [default: true]
    B:showCollarColor=true

    # A list of blocks for which we automatically show chest contents even if not sneaking [default: [storagedrawers:basicDrawers], [storagedrawersextra:extra_drawers]]
    S:showContentsWithoutSneaking <
        storagedrawers:basicDrawers
        storagedrawersextra:extra_drawers
     >

    # Show the growth level of crops (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showCropPercentage=1

    # If true show debug info with creative probe [default: true]
    B:showDebugInfo=true

    # Show harvest level (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showHarvestLevel=1

    # Show horse stats setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showHorseStatSetting=2

    # If the number of items in an inventory is lower or equal then this number then more info is shown [range: 0 ~ 20, default: 4]
    I:showItemDetailThresshold=6

    # Show lever/comparator/repeater settings (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showLeverSetting=1

    # Show time to adulthood for baby mobs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobGrowth=1

    # Show mob health (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobHealth=1

    # Show mob potion effects (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showMobPotionEffects=2

    # Show mob spawner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobSpawnerSetting=1

    # Show mod name (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showModName=1

    # How to display RF: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
    I:showRF=1

    # Show redstone (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showRedstone=1

    # Reveal monster eggs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 0]
    I:showSilverfish=0

    # The maximum amount of slots (empty or not) to show without sneaking [range: 0 ~ 1000, default: 0]
    I:showSmallChestContentsWithoutSneaking=0

    # How to display tank contents: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
    I:showTank=1

    # Show tank setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showTankSetting=2

    # If true there will be a readme note for first-time players [default: true]
    B:spawnNote=true
    B:spawnNotification=true

    # If true there will be a bauble version of the probe if baubles is present [default: true]
    B:supportBaubles=true

    # Format for displaying tank contents: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:tankFormat=1

    # Alternate color for the tank bar [default: ff000043]
    S:tankbarAlternateFilledColor=ff000043

    # Color for the tank bar border [default: ff555555]
    S:tankbarBorderColor=ff555555

    # Color for the tank bar [default: ff0000dd]
    S:tankbarFilledColor=ff0000dd

    # The amount of milliseconds to wait before updating probe information from the server (this is a client-side config) [range: 10 ~ 100000, default: 300]
    I:timeout=300

    # The amount of milliseconds to wait before showing a 'fetch from server' info on the client (if the server is slow to respond) (-1 to disable this feature) [range: -1 ~ 100000, default: 2000]
    I:waitingForServerTimeout=2000
}


